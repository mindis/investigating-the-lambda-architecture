# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=samza-srbench-q1

# YARN
yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz

# Task
task.class=ch.uzh.ddis.thesis.lambda_architecture.batch.SRBench.samzatask.SRBenchTask
task.inputs=kafka.srbench-rainfallobservation
task.commit.ms=60000
task.chooser.class=org.apache.samza.system.chooser.RoundRobinChooserFactory
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=2

# Store
stores.mystore.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.mystore.changelog=kafka.srbench-store-changelog
stores.mystore.key.serde=string
stores.mystore.msg.serde=generic

# Metrics
metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics-debs
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory


# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.linkedlist.class=ch.uzh.ddis.thesis.lambda_architecture.batch.serde.LinkedListSerdeFactory
serializers.registry.generic.class=ch.uzh.ddis.thesis.lambda_architecture.batch.serde.GenericSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
serializers.default=string

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=string
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.producer.metadata.broker.list=localhost:9092
systems.kafka.producer.producer.type=sync


systems.kafka.producer.batch.num.messages=
systems.kafka.streams.metrics.samza.msg.serde=metrics



