<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.uzh.ddis.thesis</groupId>
    <artifactId>lambda-architecture</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>Investigating the Lambda-Architecture</name>
    <description>Master Thesis at University of Zurich</description>
    <url>https://bitbucket.org/nicolas_baer/investigating-the-lambda-architecture</url>

    <packaging>pom</packaging>

    <developers>
        <developer>
            <name>Nicolas BÃ¤r</name>
            <email>nicolas.baer@uzh.ch</email>
        </developer>
    </developers>

    <modules>
        <module>torque_deploy</module>
        <module>batch</module>
        <module>coordination</module>
        <module>data</module>
        <module>utils</module>
        <module>speed</module>
        <module>partitioner</module>
        <module>shutdown_handler</module>
    </modules>

    <properties>
        <!-- runtime properties -->
        <runtime.experiment.type>baseline</runtime.experiment.type>
        <runtime.flume.host>localhost</runtime.flume.host>
        <runtime.flume.port>4141</runtime.flume.port>
        <runtime.kafka.zoo.host>localhost:2181/</runtime.kafka.zoo.host>
        <runtime.kafka.broker.list>localhost:9092</runtime.kafka.broker.list>
        <runtime.yarn.fs.defaultFS>hdfs://$host:8020</runtime.yarn.fs.defaultFS>
        <runtime.mongodb.host>localhost</runtime.mongodb.host>
        <runtime.mongodb.port>27017</runtime.mongodb.port>
        <!-- enter multiple netty addresses using ; as delimitier -->
        <runtime.coordinator.netty.address.list>localhost:5050</runtime.coordinator.netty.address.list>
        <runtime.redis.host>localhost</runtime.redis.host>
        <runtime.speed.num.workers>1</runtime.speed.num.workers>
        <runtime.speed.num.partitions>8</runtime.speed.num.partitions>

        <!-- dependency versions -->
        <kafka-version>0.8.1.1</kafka-version>
        <samza-version>0.7.0</samza-version>
        <storm-version>0.9.2-incubating</storm-version>
        <curator-version>2.4.0</curator-version>
        <spark-version>0.9.0-incubating</spark-version>
        <esper-version>5.0.0</esper-version>
        <pig-version>0.12.1</pig-version>
        <hadoop-version>2.2.0</hadoop-version>
        <hadoop-core-version>1.2.1</hadoop-core-version>
        <mongodb-version>2.12.2</mongodb-version>


        <!-- lang -->
        <scala-version>2.10.4</scala-version>
        <scala.binary.version>2.10</scala.binary.version>

        <!-- utils -->
        <log4j-version>2.0-rc1</log4j-version>
        <junit-version>4.11</junit-version>
        <powermock-version>1.5.4</powermock-version>
        <commons-cli-version>1.2</commons-cli-version>
        <akka.group>org.spark-project.akka</akka.group>
        <akka.version>2.2.3-shaded-protobuf</akka.version>

        <!-- encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- apache kafka: kafka is one of the coordinator and used in any module -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.10</artifactId>
            <version>${kafka-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- networking -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.0.20.Final</version>
        </dependency>

        <!-- lang -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala-version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0.1</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>org.javatuples</groupId>
            <artifactId>javatuples</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- math -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.3</version>
        </dependency>

        <!-- command line parsing -->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli-version}</version>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.0-rc1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-flume-ng</artifactId>
            <version>2.0-rc1</version>
        </dependency>
        <dependency>
            <groupId>com.ecyrd.speed4j</groupId>
            <artifactId>speed4j</artifactId>
            <version>0.18</version>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit-dep</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock-version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>codehaus</id>
            <name>codehause</name>
            <url>http://repository.codehaus.org</url>
        </repository>
    </repositories>

</project>